rna <- train(VOL~., data = x_train, method = 'neuralnet')
predict.rf <- predict(rf, x_test)
predict.svm <- predict(svm, x_test)
predict.rna <- predict(rna, x_test)
predict.rf
predict.svm
predict.rna
alom <- nls(VOL ~ b0 + b1*DAP*DAP*HT, data = x_train, start=list(b0=0.5, b1=0.5))
predict.alom <- predict(alom, x_test)
predict.alom
head(dataset)
x_test
predict.rf
x_test$VOL
predict.svm
cor(predict.svm, x_test$VOL)
cor_svm = cor(predict.svm, x_test$VOL)
predict.alom
cor(predict.alom, x_test$VOL)
predict.rna
cor(predict.rna, x_test$VOL)
cor_rna = cor(predict.rna, x_test$VOL)
cor(predict.rf, x_test$VOL)
predict.rf <- predict(rf, x_test)
predict.svm <- predict(svm, x_test)
predict.rna <- predict(rna, x_test)
predict.alom <- predict(alom, x_test)
predict.rf
predict.svm
predict.rna
predict.alom
cor_rf = cor(predict.rf, x_test$VOL)
cor_svm = cor(predict.svm, x_test$VOL)
cor_rna = cor(predict.rna, x_test$VOL)
cor_alom = cor(predict.alom, x_test$VOL)
library(corrplot)
library('corrplot')
install.packages("corrplot")
library('corrplot')
library('RColorBrewer')
corrplot(cor_rf, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
plot(cor_rf)
corplot(cor_rf)
corrplot(cor_rf)
ggcorr(cor_rf)
plot(predict.rf)
dataset <- read.csv2(file = 'http://www.razer.net.br/datasets/Volumes.csv')
head(dataset)
set.seed(42)
dataset$NR <- NULL
index <- createDataPartition(x_train$VOL, p = 0.80, list = FALSE)
x_train <- x_train[index,]
x_test <- x_train[-index,]
rf <- train(VOL~., data = x_train, method = 'rf')
svm <- train(VOL~., data = x_train, method = 'svmRadial')
rna <- train(VOL~., data = x_train, method = 'neuralnet')
alom <- nls(VOL ~ b0 + b1*DAP*DAP*HT, data = x_train, start=list(b0=0.5, b1=0.5))
predict.rf <- predict(rf, x_test)
predict.svm <- predict(svm, x_test)
predict.rna <- predict(rna, x_test)
predict.alom <- predict(alom, x_test)
predict.rf
predict.svm
predict.rna
predict.alom
cor(predict.rf, x_test$VOL)
cor(predict.svm, x_test$VOL)
cor_rna = cor(predict.rna, x_test$VOL)
cor(predict.rna, x_test$VOL)
cor(predict.alom, x_test$VOL)
ceo <- read.table("home/alice/Documents/IAA/Estatistica 2/ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
ceo <- read.table("Home/alice/Documents/IAA/Estatistica 2/ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
# Importar conjunto de dados
/home/alice/Documents/IAA/Estatistica 2/
ceo <- read.table("/home/alice/Documents/IAA/Estatistica 2/ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
# Importar conjunto de dados
/home/alice/Documents/IAA/Estatistica 2/
ceo <- read.table("home/alice/Documents/IAA/Estatistica 2/ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
# Importar conjunto de dados
/home/alice/Documents/IAA/Estatistica 2/
ceo <- read.table("/home/alice/Documents/IAA/Estatistica-2/ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
# Importar conjunto de dados
/home/alice/Documents/IAA/Estatistica 2/
ceo <- read.table(ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
# Adicionar n?mero das observa??es nos dados, verificar quantas linhas tem o seu arquivo e
# usar o seguinte comando
ceo$ObsNumber <- 1:177
# Salvar conjunto de dados
save ("ceo", file = "C:/Intelig?ncia Artificial/ceo.Rdata")
# Estimando um modelo preliminar
resultados <- lm (salary~age+college+comten+ceoten+profits+grad+mktval+
sales+profmarg, data=ceo)
summary (resultados)
# Verificando a presen?a de outliers pelo teste de Bonferroni
library (carData)
library(car)
outlierTest(resultados)
# Deletando as observa??es que s?o outliers - 103 e 74, depois reestima-se a fun??o e refaz-se
# o teste de Bonferroni
ceo <- ceo[ceo$ObsNumber != 103, ]
ceo <- ceo[ceo$ObsNumber != 74, ]
resultados <- lm (salary~age+college+comten+ceoten+profits+grad+mktval+
sales+profmarg, data=ceo)
summary (resultados)
outlierTest(resultados)
# Deletando a observa??es que ? outliers - 176, depois reestima-se a fun??o e refaz-se
# o teste de Bonferroni
ceo <- ceo[ceo$ObsNumber != 168, ]
ceo <- ceo[ceo$ObsNumber != 176, ]
resultados <- lm (salary~age+college+comten+ceoten+profits+grad+mktval+
sales+profmarg, data=ceo)
summary (resultados)
outlierTest(resultados)
# O teste de Bonferroni n?o identificou outros outliers, veja o resultado
# No Studentized residuals with Bonferroni p < 0.05
# Largest |rstudent|:
#   rstudent unadjusted p-value Bonferroni p
# 60 3.417029         0.00080055       0.1385
# Teste Reset de especifica??o do modelo
# install.packages("zoo")
library (zoo)
library (lmtest)
resettest(salary~age+college+comten+ceoten+profits+grad+mktval+
sales+profmarg, power=2:3, type="regressor", data=ceo)
# H0 = o modelo est? corretamente especificado;
# HA = o modelo est? incorretamente especificado;
#Resultado do teste
# RESET test
#data:  salary ~ age + college + comten + ceoten + profits + grad + mktval + sales + profmarg
#RESET = 2.3514, df1 = 18, df2 = 145, p-value = 0.002746
#### SE PESQUISARMOS O VALOR DE F tabelado = 1,66
# Como o F calculado (2.3514) ? maior que o F tabelado (1.66) existe erro de especifica??o do modelo
### ALTERNATIVAS DE ESPECIFICA??O DO MODELO
# ceo$mktvalnew <- with (ceo,1/mktval) #--> inverso da vari?vel mktval
# ceo$agenew <- with (ceo, age*age) #--> transforma??o para idade ao quadrado
# ceo$lnsalary <- with (ceo, log(salary))  #--> tranforma??o para logaritmo neperiano
# No modelo em logaritmos as vari?veis bin?rias n?o s?o transformadas
summary(ceo)
ceo$lnsalary <- with(ceo, log(salary+464))
ceo$lnage <- with(ceo, log(age+464))
ceo$lncomten <- with(ceo,log(comten+464))
ceo$lnsales <- with(ceo, log(sales+464))
ceo$lnmktval <- with(ceo, log(mktval+464))
ceo$lnceoten <- with(ceo, log(ceoten+464))
ceo$lnprofits <- with(ceo,log(profits+464))
ceo$lnprofmarg <- with(ceo, log(profmarg+464))
# Refazendo o teste reset de especifica??o do modelo
resettest(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, power=2:3, type="regressor", data=ceo)
# Resultado do teste
# RESET test
#data:  lnsalary ~ lnage + college + lncomten + grad + lnmktval + lnsales + lnceoten + lnprofits + lnprofmarg
#RESET = 0.64378, df1 = 18, df2 = 145, p-value = 0.8597
# F tabelado = 1.66
# Como o F calculado (0.64378) ? menor que o F tabelado (1.66) n?o existe erro
# de especifica??o do modelo ou seja, o modelo log-linear est? correto.
# Ent?o o modelo correto ?:
resultados <- lm (lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+
lnceoten+lnprofits+lnprofmarg, data=ceo)
summary (resultados)
#### Verificando autocorrela??o dos res?duos, empreg?vel especialmente em dados
#### de s?ries temporais
library(lmtest)
dwtest(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, alternative="greater", data=ceo)
# Durbin-Watson test
# data:  lnsalary ~ lnage + college + lncomten + grad + lnmktval + lnsales + lnceoten + lnprofits + lnprofmarg
# DW = 2.03, p-value = 0.5761
# alternative hypothesis: true autocorrelation is greater than 0
# HIP?TESE NULA              DECIS?O             SE
# n?o existe autocorr +      rejeitar           0 < DW < dl
# n?o existe autocorr +      sem decis?o        dl <= DW <= du
# n?o existe autocorr -      rejeitar           4 - dl < DW < 4
# n?o existe autocorr -      sem decis?o        4 - du <= DW <= 4 - dl
# nenhuma autocorr + ou -    n?o rejeitar       du < DW < 4-du ***
# par?metros ?para pesquisar na tabela de Durbin-Watson ==> k = 10 (n?mero par?metros - 9 vari?veis
# mais o intercepto/constante), e n = 173 (n?mero de observa??es ==> 177-4 proque eliminamos
# 4 linhas no teste de outliers)
# Os valores da tabela s?o:
## dl = 1.594, du = 1.877
# 4 - dl = 2.406
# 4 - du = 2.123
# Para DW = 2.03, du = 1.877 e (4-du) = 2.123
# Portanto n?o existe nenhuma autocorrela??o nos res?duos
# caso exista autocorrela??o positiva ou negativa utilizar o m?todo da primeira
# diferen?a exposto na se??o 12.9 "m?todo da primeira diferen?a" do livro do Gujarati
# e Porter
# Alternativamente pode-se utilizar o estimador sandwich "HAC"
### Mas onde est?o os res?duos??
resultados <- lm(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, data=ceo)
summary (resultados)
ceo<- within(ceo, {residuos <- residuals(resultados) })
### Mas onde est?o os valores preditos (Y chap?u)
ceo<- within(ceo, {hatvalues <- hatvalues(resultados)})
##### Verificando a homocedasticidade = vari?ncia constante (amostra homog?nea?)
# para grandes amostras - mais de 100 obs - utilizar o teste de Breusch-Pagan,
# caso contr?rio utilizar o teste de Goldfeld-Quandt (gqtest) descrito na se??o 11.5
# do livro de Gujarati e Porter
bptest(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, studentize=FALSE, data=ceo)
# H0: homoced?tico (vari?ncias constantes);
# HA: Heterocedastico (vari?ncias n?o constantes)
# Breusch-Pagan test
# data:  lnsalary ~ lnage + college + lncomten + grad + lnmktval + lnsales + lnceoten + lnprofits + lnprofmarg
# BP = 56.377, df = 9, p-value = 6.651e-09
# O resultado deve ser confrontado em um teste qui-quadrado com k-1 graus de liberdade
# Como o resultado do teste BP (56.377) ? maior que o tabelado (16.9190)
# rejeita-se a hip?tese de homocedasticidade
# Corre??o da vari?ncia n?o constante por estimadores sandwich
save ("ceo", file = "C:/Intelig?ncia Artificial/ceo.Rdata")
# library(Rcmdr)
# library (lmtest)
library (sandwich)
resultados <- lm(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, data=ceo)
summary(resultados)
coeftest(resultados, vcov=vcovHC(resultados, type="HC1"))
## Para corre??o de heterocedasticidade e autocorrela??o dos res?duos usa-se o estimador
#  sandwich HAC
coeftest(resultados, vcov=vcovHAC(resultados))
# Sele??o de modelos por STEPWISE - usa AIC no c?lculo
library("Rcmdr")
stepwise(resultados, direction= 'backward/forward', criterion ='BIC')
# Portanto o melhor modelo ?:
resultados <- lm(lnsalary ~ lncomten+lnmktval+lnsales+lnceoten+lnprofmarg, data = ceo)
summary(resultados)
resultados <- lm(lnsalary ~ lncomten+lnmktval+lnsales+lnceoten+lnprofmarg - 1, data = ceo)
summary(resultados)
coeftest(resultados, vcov=vcovHAC(resultados))
# Escolhendo o melhor modelo pelos crit?rios AICc, AIC e BIC
# Modelos com menores valores de AIC e BIC s?o os melhores
AIC (resultados)
BIC (resultados)
library("AICcmodavg")
AICc(resultados, return.K = FALSE)
# Calculando os intervalos de confian?a - Para regress?o linear "normal"
confint (resultados, level = 0.95)
# Calculando os intervalos de confian?a - Para regress?o linear "robusta" (estimadores sandwich)
temp <- summary(resultados, robust = TRUE)
temp
CI.LL <- temp$coefficients[,1] - 1.96 * temp$coefficients[,2]
CI.UL <- temp$coefficients[,1] + 1.96 * temp$coefficients[,2]
cbind(CI.LL, CI.UL)
# Modelo por Regress?o Robusta
library ("MASS")
reg1.robust <- rlm(lnsalary~lnage+college+lncomten+grad+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, data = ceo)
summary(reg1.robust)
# Tirando  grad
reg1.robust <- rlm(lnsalary~lnage+college+lncomten+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, data = ceo)
summary(reg1.robust)
# Tirando lnage
reg1.robust <- rlm(lnsalary~college+lncomten+lnmktval+lnsales+lnceoten+lnprofits+
lnprofmarg, data = ceo)
summary(reg1.robust)
# Tirando lnprofits
reg1.robust <- rlm(lnsalary~college+lncomten+lnmktval+lnsales+lnceoten+
lnprofmarg, data = ceo)
summary(reg1.robust)
# Tirando college
reg1.robust <- rlm(lnsalary~lncomten+lnmktval+lnsales+lnceoten+
lnprofmarg, data = ceo)
summary(reg1.robust)
# Tirando o intercepto
reg1.robust <- rlm(lnsalary~lncomten+lnmktval+lnsales+lnceoten+
lnprofmarg - 1, data = ceo)
summary(reg1.robust)
# Importar conjunto de dados
/home/alice/Documents/IAA/Estatistica 2/
ceo <- read.table("ceo.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
salarios <- read.table("/home/alice/Documents/IAA/Estatistica-2/cps91.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
salarios$ObsNumber <- 1:5634
save ("salarios", file = "/home/alice/Documents/IAA/Estatistica-2/salarios.Rdata")
salarios <- within(salarios, {husunion<-NULL})
salarios <- within(salarios, {union<-NULL})
salarios <- within(salarios, {hrwage<-NULL})
salarios <- within(salarios, {lwage<-NULL})
salarios$famincw <- with(salarios, faminc/52.1429)
salarios$nwifeincw <- with(salarios, (nwifeinc*1000)/52.1429)
salarios$age2 <- with(salarios, age*age)
salarios$husage2 <- with(salarios, husage*husage)
summary(salarios)
resultados <- lm (famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc,
data=salarios)
summary (resultados)
library (carData)
library(car)
outlierTest(resultados)
salarios <- salarios[salarios$ObsNumber != 1347,]
salarios <- read.table("/home/alice/Documents/IAA/Estatistica-2/cps91.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
salarios$ObsNumber <- 1:5634
save ("salarios", file = "/home/alice/Documents/IAA/Estatistica-2/salarios.Rdata")
salarios <- within(salarios, {husunion<-NULL})
salarios <- within(salarios, {union<-NULL})
salarios <- within(salarios, {hrwage<-NULL})
salarios <- within(salarios, {lwage<-NULL})
salarios$famincw <- with(salarios, faminc/52.1429)
salarios$nwifeincw <- with(salarios, (nwifeinc*1000)/52.1429)
salarios$age2 <- with(salarios, age*age)
salarios$husage2 <- with(salarios, husage*husage)
summary(salarios)
resultados <- lm (famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc,
data=salarios)
summary (resultados)
library (carData)
library(car)
outlierTest(resultados)
library (zoo)
library (lmtest)
install.packages("zoo")
install.packages("lmtest")
library (zoo)
library (lmtest)
resettest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, power=2:3, type="regressor", data=salarios)
library(lmtest)
dwtest(lamincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, alternative="greater", data=salarios)
dwtest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, alternative="greater", data=salarios)
bptest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, studentize=FALSE, data=salarios)
library("Rcmdr")
install.packages("Rcmdr")
library("Rcmdr")
install.packages("Rcmdr")
install.packages("tcltk2")
install.packages("Rcmdr", dependencies = FALSE)
library("Rcmdr")
stepwise(resultados, direction= 'backward/forward', criterion ='BIC')
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
install.packages(c("backports", "car", "carData", "data.table", "dplyr", "fit.models", "ggplot2", "haven", "htmlTable", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "later", "mice", "nloptr", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "rlang", "rmarkdown", "shiny", "tibble", "tidyr", "tinytex", "vctrs", "xfun", "zip"))
salarios <- read.table("/home/alice/Documents/IAA/Estatistica-2/cps91.txt", header = TRUE, sep = "",
na.strings = "NA", dec = ".", strip.white = TRUE)
salarios$ObsNumber <- 1:5634
save ("salarios", file = "/home/alice/Documents/IAA/Estatistica-2/salarios.Rdata")
salarios <- within(salarios, {husunion<-NULL})
salarios <- within(salarios, {union<-NULL})
salarios <- within(salarios, {hrwage<-NULL})
salarios <- within(salarios, {lwage<-NULL})
salarios$famincw <- with(salarios, faminc/52.1429)
salarios$nwifeincw <- with(salarios, (nwifeinc*1000)/52.1429)
salarios$age2 <- with(salarios, age*age)
salarios$husage2 <- with(salarios, husage*husage)
summary(salarios)
resultados <- lm (famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc,
data=salarios)
summary (resultados)
library (carData)
library(car)
outlierTest(resultados)
library (zoo)
library (lmtest)
resettest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, power=2:3, type="regressor", data=salarios)
library(lmtest)
dwtest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, alternative="greater", data=salarios)
bptest(famincw~husage+husearns+huseduc+husblck+hushisp+hushrs+kidge6+
earns+age+black+educ+hispanic+exper+kidlt6+hours+nwifeinc, studentize=FALSE, data=salarios)
library("Rcmdr")
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
stepwise(resultados, direction= 'backward/forward', criterion ='BIC')
resultados <- lm(lnsalary ~ lncomten+lnmktval+lnsales+lnceoten+lnprofmarg, data = ceo)
install.packages("e1071")
install.packages("caret")
install.packages("caret")
library("caret")
install.packages("caret")
install.packages("caret")
install.packages("e1071")
library(caret)
install.packages("mlbench")
install.packages("mice")
library(mlbench)
library(mice)
setwd("/home/alice/Documents/Projects/studies/IAA/lab-ia/cancer")
temp_dados <- read.csv("Material 02 - 2 - Cancer de Mama - Dados.csv")
View(temp_dados)
temp_dados$Id <- NULL
imp <- mice(temp_dados)
dados <- complete(imp, 1)
### Criar bases de Treino e Teste
set.seed(1912)
indices <- createDataPartition(dados$Class, p=0.80,list=FALSE)
treino <- dados[indices,]
teste <- dados[-indices,]
### Treinar o modelo com Hold-out
set.seed(1912)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE)
rna
### Predições dos valores do conjunto de teste
predict.rna <- predict(rna, teste)
### Matriz de confusão
confusionMatrix(predict.rna, as.factor(teste$Class))
temp_dados <- read.csv("Material 02 - 2 - Cancer de Mama - Dados.csv")
### Tratar o Id e Missing Values
temp_dados$Id <- NULL
imp <- mice(temp_dados)
dados <- complete(imp, 1)
### Criar bases de Treino e Teste
set.seed(55)
indices <- createDataPartition(dados$Class, p=0.80,list=FALSE)
treino <- dados[indices,]
teste <- dados[-indices,]
### Treinar o modelo com Hold-out
set.seed(55)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE)
rna
### Predições dos valores do conjunto de teste
predict.rna <- predict(rna, teste)
### Matriz de confusão
confusionMatrix(predict.rna, as.factor(teste$Class))
set.seed(1912)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE, trControl=ctrl)
install.packages("caret")
install.packages("caret")
library(caret)
ctrl <- trainControl(method = "cv", number = 10)
set.seed(1912)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE, trControl=ctrl)
predict.rna <- predict(rna, teste)
confusionMatrix(predict.rna, as.factor(teste$Class))
set.seed(55)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE, trControl=ctrl)
predict.rna <- predict(rna, teste)
confusionMatrix(predict.rna, as.factor(teste$Class))
### Obter os dados
setwd("/home/alice/Documents/Projects/studies/IAA/lab-ia/cancer")
temp_dados <- read.csv("Material 02 - 2 - Cancer de Mama - Dados.csv")
### Tratar o Id e Missing Values
temp_dados$Id <- NULL
imp <- mice(temp_dados)
dados <- complete(imp, 1)
### Criar bases de Treino e Teste
set.seed(55)
indices <- createDataPartition(dados$Class, p=0.80,list=FALSE)
treino <- dados[indices,]
teste <- dados[-indices,]
### Treinar o modelo com Hold-out
set.seed(55)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE)
rna
### Predições dos valores do conjunto de teste
predict.rna <- predict(rna, teste)
### Matriz de confusão
confusionMatrix(predict.rna, as.factor(teste$Class))
ctrl <- trainControl(method = "cv", number = 10)
set.seed(55)
rna <- train(Class~., data=treino, method="nnet",trace=FALSE, trControl=ctrl)
predict.rna <- predict(rna, teste)
confusionMatrix(predict.rna, as.factor(teste$Class))
grid <- expand.grid(size = seq(from = 1, to = 45, by = 10),decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(1912)
rna <- train(
form = Class~. ,
data = treino ,
method = "nnet" ,
tuneGrid = grid ,
trControl = ctrl ,
maxit = 2000,trace=FALSE)
grid <- expand.grid(size = seq(from = 1, to = 45, by = 10),decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(1912)
rna <- train(
form = Class~. ,
data = treino ,
method = "nnet" ,
tuneGrid = grid ,
trControl = ctrl ,
maxit = 2000,trace=FALSE)
rna
grid <- expand.grid(size = seq(from = 1, to = 45, by = 10),decay = seq(from = 0.1, to = 0.9, by = 0.3))
set.seed(55)
rna <- train(
form = Class~. ,
data = treino ,
method = "nnet" ,
tuneGrid = grid ,
trControl = ctrl ,
maxit = 2000,trace=FALSE)
rna
dados_novos_casos <- read.csv("Material 02 - 2 - Cancer de Mama - Dados - Novos Casos.csv")
dados_novos_casos$Id <- NULL
# View(dados_novos_casos)
predict.rna <- predict(rna, dados_novos_casos)
dados_novos_casos$Class <- NULL
resultado <- cbind(dados_novos_casos, predict.rna)
grid <- expand.grid(size = c(1), decay =c(0.4))
set.seed(55)
melhor_modelo_rna <- train(form = Class~. , data = dados , method = "nnet" , tuneGrid = grid , trControl = ctrl, maxit = 2000,trace=FALSE)
melhor_modelo_rna
